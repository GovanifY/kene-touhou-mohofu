
# /*
# ---------------------------------------------------------
#   東方模倣風 〜 Toho Imitation Style.
#   http://mohou.huuryuu.com/
# ---------------------------------------------------------
# 模倣風のプロファイラ取ったら、strcmp(); が凄かったので、
# 急遽231がテキトーに書いた strcmp。
# ---------------------------------------------------------
# あまりにテキトーなので mips標準 に書き換えた。(ついでにフレームポインタ削除した)
# 前のより判りやすくなった筈。
# ---------------------------------------------------------
# */

# /*
# strcmp と大体同じだけど、チョビット速い。
# -------------------------------------------------------
# 字数、大小判定はありません。 asciiコード と シフトJISコード 以外は対応していません。
# 文字列B側は必ずconst定数なので(0で終わると保証されているとみなして)エラーチェックを省いてます。
# -------------------------------------------------------
# 引数
# -------------------------------------------------------
# char *aaa;        文字列Ａ(のポインタ)
# const char *bbb;  文字列Ｂ(のポインタ)
# -------------------------------------------------------
# 戻り値
# -------------------------------------------------------
# return (0);       文字列Ａ、Ｂは同じ。
# return (1);       文字列Ａ、Ｂは違う。
# */

.text
.align  4

# /* extern int tiny_strcmp(char *aaa, const char *bbb); */
.globl  tiny_strcmp
.ent    tiny_strcmp
tiny_strcmp:
.set    noreorder
.set    nomacro
L_loop:
    lb      $t0, 0($a1)             # 評価式0 = (unsigned char)(*bbb);
    lb      $t1, 0($a0)             # 評価式1 = (unsigned char)(*aaa);                      # スロットＡ

    bne     $t0, $t1, L_not_equal   # if ( 評価式0 != 評価式1 )     { goto L_not_equal; }   # スロットＡ
    addiu   $a1, 1                  # bbb++;                                                # スロットＢ[先読み実行]

    bnez    $t0, L_loop             # if (0x00 != 評価式0 )         {   goto L_loop;    }   # スロットＡ
    addiu   $a0, 1                  # aaa++;                                                # スロットＢ[先読み実行]
                                    # /* L_equal :←コメントなのに、何故かラベルと見なされエラーになる場合があるので離してある。 */
    jr      $ra                     # return (0);                                           # スロットＡ
    move    $v0, $0                 #                                                       # スロットＢ[先読み実行]
L_not_equal:
    jr      $ra                     # return (1);                                           # スロットＡ
    li      $v0, 1                  #                                                       # スロットＢ[先読み実行]

.set    macro
.set    reorder
.end    tiny_strcmp
